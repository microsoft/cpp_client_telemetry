plugins {
    id 'maven-publish'
    id 'net.linguica.maven-settings' version '0.5'
}

apply plugin: 'com.android.library'

apply from: "$projectDir/../tools.gradle"

android {
    defaultConfig {

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        if(!ext.has("build_cpp_client") || ext.build_cpp_client) {
            externalNativeBuild {
                cmake {
                    String cxxFlag = project.findProperty("CXXFLAGS") ?: System.getenv("CXXFLAGS") ?: ""
                    ArrayList<String> args = new ArrayList<String>()
                    args.add("-DANDROID_STL=c++_shared")
                    args.add("-DBUILD_SHARED_LIBS=1")
                    args.add("-DUSE_ROOM=1")
                    String linkerFlag = project.findProperty("CMAKE_SHARED_LINKER_FLAGS") ?: ""
                    linkerFlag = "-DCMAKE_SHARED_LINKER_FLAGS=" + linkerFlag
                    args.add(linkerFlag)
                    if (!cxxFlag.isEmpty()) {
                        args.add("-DCMAKE_CXX_FLAGS=\"" + cxxFlag + "\"")
                    }
                    // Passes optional arguments to CMake.
                    arguments args.toArray(new String[args.size()])
                    println "cmake flag: " + arguments
                }
            }
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            jniDebuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    if(!ext.has("build_cpp_client") || ext.build_cpp_client) {
        externalNativeBuild {
            cmake {
                path "src/main/cpp/CMakeLists.txt"
                version "3.10.2"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    def room_version = '2.2.6'

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-inline:3.2.4'
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}