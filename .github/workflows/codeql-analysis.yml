# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
name: "CodeQL"

on:
  push:
    branches: [ master, main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master, main ]
  schedule:
    - cron: '0 8 * * 1'

jobs:
  analyze:
    name: Analyze
    runs-on: windows-2019
    permissions:
      contents: read
      actions: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['cpp', 'csharp', 'javascript', 'python']
        # Learn more...
        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      continue-on-error: true

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file. 
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    # - name: Autobuild
    #   uses: github/codeql-action/autobuild@v3
    - name: Build
      env:
        SKIP_ARM_BUILD: 1
        SKIP_ARM64_BUILD: 1
        PlatformToolset: v142
        VSTOOLS_VERSION: vs2019
      shell: cmd
      if: matrix.language == 'cpp' || matrix.language == 'csharp'
      run: build-all.bat

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  analyze-java:
    name: Analyze Java
    runs-on: windows-latest
    permissions:
      contents: read
      actions: read
      security-events: write

    strategy:
      fail-fast: false
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      continue-on-error: true

    - name: Update submodules
      run: |
        git submodule sync
        git config --global submodule.lib/modules.update none
        git -c protocol.version=2 submodule update --init --force --depth=1

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: java

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'
    - name: Remove default github maven configuration
      run: rm $Env:USERPROFILE\.m2\settings.xml
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
    - name: Install NDK
      run: |
        java -version
        gci env:* | sort-object name
        new-item "C:\Users\runneradmin\.android\repositories.cfg" -ItemType "file"
        echo yes | .\sdkmanager.bat "ndk-bundle" "cmake;3.10.2.4988404" "ndk;21.4.7075529" --sdk_root=$Env:ANDROID_SDK_ROOT
      working-directory: ${{ env.ANDROID_SDK_ROOT }}\cmdline-tools\7.0\bin
    - name: Chocolatey
      run: |
        choco install --no-progress -y ninja
    - name: List CMake
      run: |
        pwd
        echo "=================="
        gci -r -i "CMake*" -Name
        echo "=================="
        gci -r -i "gtest-all*" -Name
        echo "=================="
        gci third_party/ -Name
        echo "=================="
        gci third_party/googletest -Name
    - name: Gradle Build
      run: |
        .\gradlew.bat maesdk:assemble app:assemble
      working-directory: lib\android_build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
